/**
 * api
 * Tiblar is a privacy center media sharing site https://tiblar.com/support/pages/mission 
 *
 * OpenAPI spec version: v2
 * Contact: support@tiblar.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.InlineResponse2003
import io.swagger.client.model.InlineResponse2004
import io.swagger.client.model.InlineResponse2005
import io.swagger.client.model.InlineResponse2006
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object MeApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 200 : InlineResponse2005 (successful operation)
   *   code 403 :  (Auth token not found)
   * 
   * @param authToken token given after login
   */
  def geDiscordStatus(authToken: Option[String] = None): ApiRequest[InlineResponse2005] =
    ApiRequest[InlineResponse2005](ApiMethods.GET, "https://virtserver.swaggerhub.com/Tiblar/Tiblar-v2/v2", "/users/@me/connections/discord/status", "application/json")
      .withHeaderParam("auth-token", authToken)
      .withSuccessResponse[InlineResponse2005](200)
      .withErrorResponse[Unit](403)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : InlineResponse2006 (successful operation)
   *   code 403 :  (Auth token not found)
   * 
   * @param authToken token given after login
   */
  def getFollowRequest(authToken: Option[String] = None): ApiRequest[InlineResponse2006] =
    ApiRequest[InlineResponse2006](ApiMethods.GET, "https://virtserver.swaggerhub.com/Tiblar/Tiblar-v2/v2", "/users/@me/follow/requests", "application/json")
      .withHeaderParam("auth-token", authToken)
      .withSuccessResponse[InlineResponse2006](200)
      .withErrorResponse[Unit](403)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : InlineResponse2004 (successful operation)
   *   code 403 :  (Auth token not found)
   * 
   * @param authToken token given after login
   */
  def getMyNotifications(authToken: Option[String] = None): ApiRequest[InlineResponse2004] =
    ApiRequest[InlineResponse2004](ApiMethods.GET, "https://virtserver.swaggerhub.com/Tiblar/Tiblar-v2/v2", "/users/@me/notifications", "application/json")
      .withHeaderParam("auth-token", authToken)
      .withSuccessResponse[InlineResponse2004](200)
      .withErrorResponse[Unit](403)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : InlineResponse2005 (successful operation)
   *   code 403 :  (Auth token not found)
   * 
   * @param authToken token given after login
   */
  def getMyNotificationsCount(authToken: Option[String] = None): ApiRequest[InlineResponse2005] =
    ApiRequest[InlineResponse2005](ApiMethods.GET, "https://virtserver.swaggerhub.com/Tiblar/Tiblar-v2/v2", "/users/@me/notifications/count", "application/json")
      .withHeaderParam("auth-token", authToken)
      .withSuccessResponse[InlineResponse2005](200)
      .withErrorResponse[Unit](403)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : InlineResponse2003 (successful operation)
   *   code 403 :  (Auth token not found)
   * 
   * @param authToken token given after login
   */
  def getMyProfile(authToken: Option[String] = None): ApiRequest[InlineResponse2003] =
    ApiRequest[InlineResponse2003](ApiMethods.GET, "https://virtserver.swaggerhub.com/Tiblar/Tiblar-v2/v2", "/users/@me", "application/json")
      .withHeaderParam("auth-token", authToken)
      .withSuccessResponse[InlineResponse2003](200)
      .withErrorResponse[Unit](403)
      

}

