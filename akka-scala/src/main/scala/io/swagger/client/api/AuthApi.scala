/**
 * api
 * Tiblar is a privacy center media sharing site https://tiblar.com/support/pages/mission 
 *
 * OpenAPI spec version: v2
 * Contact: support@tiblar.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.Encase
import io.swagger.client.model.InlineResponse2001
import io.swagger.client.model.InlineResponse2002
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object AuthApi {

  /**
   * raw password and username with security code and id
   * 
   * Expected answers:
   *   code 200 : InlineResponse2001 (New token with the time it expires)
   *   code 400 :  (Invalid JSON)
   *   code 401 :  (Invalid security code, username, or password)
   * 
   * @param encase Login information
   */
  def findPetsByStatus(encase: Encase): ApiRequest[InlineResponse2001] =
    ApiRequest[InlineResponse2001](ApiMethods.POST, "https://virtserver.swaggerhub.com/Tiblar/Tiblar-v2/v2", "/auth/login", "application/json")
      .withBody(encase)
      .withSuccessResponse[InlineResponse2001](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](401)
        /**
   * Needs auth-Token and content type (\&quot;application/json\&quot;)
   * 
   * Expected answers:
   *   code 200 : InlineResponse2002 (New token with the time it expires)
   *   code 401 :  (Invalid security code)
   * 
   * @param authToken Login information
   * @param contentType Login information
   */
  def logout(authToken: String, contentType: String): ApiRequest[InlineResponse2002] =
    ApiRequest[InlineResponse2002](ApiMethods.POST, "https://virtserver.swaggerhub.com/Tiblar/Tiblar-v2/v2", "/auth/logout", "application/json")
      .withHeaderParam("Auth-Token", authToken)
      .withHeaderParam("Content-Type", contentType)
      .withSuccessResponse[InlineResponse2002](200)
      .withErrorResponse[Unit](401)
        /**
   * Needs auth-Token and content type (\&quot;application/json\&quot;)
   * 
   * Expected answers:
   *   code 200 : InlineResponse2001 (New token with the time it expires)
   *   code 401 :  (Invalid security code)
   * 
   * @param authToken Login information
   */
  def refreshToken(authToken: String): ApiRequest[InlineResponse2001] =
    ApiRequest[InlineResponse2001](ApiMethods.POST, "https://virtserver.swaggerhub.com/Tiblar/Tiblar-v2/v2", "/auth/token/refresh", "application/json")
      .withHeaderParam("Auth-Token", authToken)
      .withSuccessResponse[InlineResponse2001](200)
      .withErrorResponse[Unit](401)
        /**
   * Needs auth-Token and content type (\&quot;application/json\&quot;)
   * 
   * Expected answers:
   *   code 200 : InlineResponse2001 (New token with the time it expires)
   *   code 401 :  (Invalid security code)
   * 
   * @param authToken Login information
   * @param contentType Login information
   */
  def validateUsername(authToken: String, contentType: String): ApiRequest[InlineResponse2001] =
    ApiRequest[InlineResponse2001](ApiMethods.POST, "https://virtserver.swaggerhub.com/Tiblar/Tiblar-v2/v2", "/auth/validate-username", "application/json")
      .withHeaderParam("Auth-Token", authToken)
      .withHeaderParam("Content-Type", contentType)
      .withSuccessResponse[InlineResponse2001](200)
      .withErrorResponse[Unit](401)
      

}

